id: 79
replyTo: 69
name: Klusjesman
email: CF8A52B00AAAFF5039DFBB43F5D09462
body: "Yesterday I was able to receive data using slightly changed CC1150 send registers, using sync mode. The first bytes were ok. I could see the message start with 170. But after a few bytes the data started to be corrupted. Also the distance of my remote had effect on the data received. Obviously because the RX settings I was using were not ok.\n\nSince I don't have much knowledge on RF I decided to reverse engineer the CC1101 settings on the Itho ventilation print itself.\n\nIt turns out Itho is using async mode to handle the received data.\n\nUnfortunately I am not able to receive any data on my GDO0 pin in sync or async mode when using the Itho CC1101 register settings I retrieved. I guess it could be related to the filters on the CC1101 print I am using???\n\n/*\n       Base frequency             868.299866MHz\n       Channel                           0\n       Channel spacing            199.951172kHz\n       Carrier frequency   868.299866MHz\n       Xtal frequency             26.000000MHz\n       Data rate                  38.3835kBaud\n       RX filter BW        325.000000kHz\n       Manchester                 disabled\n       Modulation                 2-FSK\n       Deviation                  50.781250kHz\n       TX power                   0x6F,0x26,0x2E,0x7F,0x8A,0x84,0xCA,0xC4\n       PA ramping                 enabled\n       Whitening                  disabled\n       */     \n\n       writeCommand(CC1101_SRES);\n\n       writeRegister(CC1101_TEST0 ,0x09);\n       writeRegister(CC1101_FSCAL2 ,0x00);\n\n       //0x6F,0x26,0x2E,0x7F,0x8A,0x84,0xCA,0xC4\n       writeBurstRegister(CC1101_PATABLE | CC1101_WRITE_BURST, (uint8_t*)ithoPaTableReceive, 8);\n\n       writeCommand(CC1101_SCAL);\n\n       writeRegister(CC1101_FSCAL2 ,0x00);\n       writeRegister(CC1101_MCSM0 ,0x18);                    //no auto calibrate\n       writeRegister(CC1101_FREQ2 ,0x21);\n       writeRegister(CC1101_FREQ1 ,0x65);\n       writeRegister(CC1101_FREQ0 ,0x6A);\n       writeRegister(CC1101_IOCFG0 ,0x2E);                   //High impedance (3-state)\n       writeRegister(CC1101_IOCFG2 ,0x2E);                   //High impedance (3-state)\n       writeRegister(CC1101_FSCTRL1 ,0x06);\n       writeRegister(CC1101_FSCTRL0 ,0x00);\n       writeRegister(CC1101_MDMCFG4 ,0x5A);\n       writeRegister(CC1101_MDMCFG3 ,0x83);\n       writeRegister(CC1101_MDMCFG2 ,0x00);           //Enable digital DC blocking filter before demodulator, 2-FSK, Disable Manchester encoding/decoding, No preamble/sync \n       writeRegister(CC1101_MDMCFG1 ,0x22);           //Disable FEC\n       writeRegister(CC1101_MDMCFG0 ,0xF8);\n       writeRegister(CC1101_CHANNR ,0x00);\n       writeRegister(CC1101_DEVIATN ,0x50);\n       writeRegister(CC1101_FREND1 ,0x56);\n       writeRegister(CC1101_FREND0 ,0x17);\n       writeRegister(CC1101_MCSM0 ,0x18);                    //no auto calibrate\n       writeRegister(CC1101_FOCCFG ,0x16);\n       writeRegister(CC1101_BSCFG ,0x6C);\n       writeRegister(CC1101_AGCCTRL2 ,0x43);\n       writeRegister(CC1101_AGCCTRL1 ,0x40);\n       writeRegister(CC1101_AGCCTRL0 ,0x91);\n       writeRegister(CC1101_FSCAL3 ,0xA9);\n       writeRegister(CC1101_FSCAL2 ,0x2A);\n       writeRegister(CC1101_FSCAL1 ,0x00);\n       writeRegister(CC1101_FSCAL0 ,0x11);\n       writeRegister(CC1101_FSTEST ,0x59);\n       writeRegister(CC1101_TEST2 ,0x81);\n       writeRegister(CC1101_TEST1 ,0x35);\n       writeRegister(CC1101_TEST0 ,0x0B);\n       writeRegister(CC1101_PKTCTRL1 ,0x04);          //No address check, Append two bytes with status RSSI/LQI/CRC OK, \n       writeRegister(CC1101_PKTCTRL0 ,0x32);          //Infinite packet length mode, CRC disabled for TX and RX, No data whitening, Asynchronous serial mode, Data in on GDO0 and data out on either of the GDOx pins \n       writeRegister(CC1101_ADDR ,0x00);\n       writeRegister(CC1101_PKTLEN ,0xFF);\n       writeRegister(CC1101_TEST0 ,0x09);\n       writeRegister(CC1101_FSCAL2 ,0x00);\n\n       writeCommand(CC1101_SCAL);\n\n       writeRegister(CC1101_MCSM0 ,0x18);                    //no auto calibrate\n       writeCommand(CC1101_SIDLE);\n\n       writeCommand(CC1101_SIDLE);\n      \n       writeRegister(CC1101_MDMCFG2 ,0x00);           //Enable digital DC blocking filter before demodulator, 2-FSK, Disable Manchester encoding/decoding, No preamble/sync \n       writeRegister(CC1101_IOCFG0 ,0x0D);                   //Serial Data Output. Used for asynchronous serial mode.\n\n       writeCommand(CC1101_SRX);"
date: 2016-04-17T16:46:14.0000000+02:00
