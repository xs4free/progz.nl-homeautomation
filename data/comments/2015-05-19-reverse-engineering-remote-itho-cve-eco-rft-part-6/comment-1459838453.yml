id: 66
replyTo: 63
name: Klusjesman
email: CF8A52B00AAAFF5039DFBB43F5D09462
body: >-
  Hi Rogier,


  I assume Itho wants to have a reliable communication so I am wondering if they are really using the internal oscillator. According to some source on internet it is possible to use one oscillator for two IC's. But I don't know if this is the case on the RFT print. Also the 26MHz is out of the ATmega spec.


  The main reason why I am thinking about all of this is why there is the need to clock out every single bit to GDO0, instead of just using the TX FIFO and let the CC1101 do all the work? I guess it is because of the last 3 single bits in the message? But I am wondering what the effect of those 3 bits actually is on RF communication. Are they transmitted through the air and end up as 3 single bits on the other side? Could the 3 bits be a result of some kind of flushing problem, while in reality 1 byte is used?


  I will test the receiving of RF data first to see how it is working. I didn't dive into the CC1101 that deep before. First I want to play a little with the CC1101 itself. Unfortunately I am wasting a lot of time right now since my STK500 is broken. So I cannot test my CC1101 code. I ordered a new one and am waiting for it to arrive. I don't really like Arduino so I don't have one. I just want to have full control. I am using the STK500 and a AVR Dragon. The Dragon is just in its box most of the time, unused. Basically because I am using serial communication for debugging purposes.


  Since I am using a STK500 I am also using an external oscillator in my circuits. I made a RS485 bus system at home and all slaves are "standalone" circuits with ATmega, oscillator, voltage divider, RS485 comm and a lot of sensors. The master of the bus is running on the STK500. All what is left are the features of the master (storage on external memory, touchscreen and controlling the Itho).
date: 2016-04-05T08:40:53.0000000+02:00
