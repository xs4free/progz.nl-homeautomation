id: 129
replyTo: 128
name: JFdB
email: BD446D44408677D08C5A5F907D71B8EE
body: "Hi Jimmy, The CC1101 has a fundamental flaw, that is that when you read out a register at the same time it is being updated, the result could be seriously off (a glitch where the register value is not off by one, but gives a completely random result). The recommendation in the errata sheet is that you read out the register twice, and if the result is the same, you accept it. But if you read out a register that is e.g., counting down (like the TX buffer) and you read it out slower that the update rate, each consecutive reading will be different (but only by 1 or a very low number). In the readRegisterWithSyncProblem routine, the routine one returns UNTIL two consecutive reads give exactly the same result. So this routine could hang until e.g. the TX buffer is empty, then consecutive reads will be the same. \nThe readRegisterMedian3 routine always returns after 3 reads, so it NEVER hangs. Median3 takes the median of 3 values (this is different from mean), and tolerates one erroneous read (like a glitch) and still gives a reliable value for e.g., a counting down register. It will give the correct result in case of a glitch because the probability of two out of three reads suffering from a read glitch (meaning reading a value that is way off) on a register that is updated is extremely small. In case of a constantly changing value (like the TX buffer) it gives a good approximate value (at most off by a few).\n\nBut, increasing the SPI speed also fixes the problem, the recommended fix in the CC1101 errata sheet as implemented by klusjesman also states that you need to do two consecutive reads of a register within a single update time of the register, which is determined by the baud speed of the RF connection and the SPI bus speed. To do this properly, it should be calculated based on the baud speed of the RF connection and the SPI bus speed.\nRegardless of the speeds, readRegisterMedian3 will NOT hang and give very reasonable results.\n\nI posted my Arduino code on github. https://github.com/JFdeB/ArduinoIthoEcoFanRFT\nYours is nicer, you incorporated more native Arduino code (like the SPI and serial read functions)"
date: 2016-05-19T20:56:03.0000000+02:00
