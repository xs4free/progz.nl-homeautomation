id: 110
replyTo: 107
name: JFdB
email: BD446D44408677D08C5A5F907D71B8EE
body: >-
  Dear Rogier and Klusjesman,
   I figured out the problem. When the send message is larger than 64 (In klusjesman code actually 61) bytes, the send command routine first sends 61 bytes in burst mode and then starts checking the TX_BUFFER to see if the additional bytes can be send.
  However, due to a hardware bug, reading of some registers gives erroneous results, this was solved (as recommended by the CC1101 errata sheet) by reading the registers until two consecutive reads give the same results (readRegisterWithSyncProblem). However, this fails massively for a register that is continuously updated (like the number of bytes in the TX_BUFFER during sending). Thus readRegisterWithSyncProblem for the TX_BUFFER only returns when the buffer is empty, then two consequtive reads will give the same results. That is too late and leads to a TXFIFO_UNDERFLOW condition! The solution is to simply read the register just once, accepting that the value might be incorrect, but at least the TXFIFO_UNDERFLOW condition does not occur.

  Therefore the following statement:


  while ((txStatus = (readRegisterWithSyncProblem(CC1101_TXBYTES, CC1101_STATUS_REGISTER) & CC1101_BITS_RX_BYTES_IN_FIFO)) > (CC1101_DATA_LEN - 2))


  Was replaced by:


  while ((txStatus = (readRegister(CC1101_TXBYTES | CC1101_STATUS_REGISTER) & CC1101_BITS_RX_BYTES_IN_FIFO)) > (CC1101_DATA_LEN - 2));


  (Note the "|" in readRegister)


  Klusjesman: I believe this should also be fixed in your github post in the file CC1101.cpp


  I have successfully joined  the Itho fan, and can control the speed from the arduino program. Success!!!


  I would like to post the arduino code on github, but I have never done that before. Can I fork from Klusjesman or Rogier your code?

  Klusjesman seems most appropriate, I have only made a few changes to his code.

  Both of you, again awesome job figuring out the Itho messages and writing the code to program the CC1101 module, thanks so much
date: 2016-05-13T18:11:47.0000000+02:00
